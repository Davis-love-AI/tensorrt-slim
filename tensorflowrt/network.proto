/* ============================================================================
# [2017] - Robik AI Ltd - Paul Balanca
# All Rights Reserved.

# NOTICE: All information contained herein is, and remains
# the property of Robik AI Ltd, and its suppliers
# if any.  The intellectual and technical concepts contained
# herein are proprietary to Robik AI Ltd
# and its suppliers and may be covered by U.S., European and Foreign Patents,
# patents in process, and are protected by trade secret or copyright law.
# Dissemination of this information or reproduction of this material
# is strictly forbidden unless prior written permission is obtained
# from Robik AI Ltd.
# =========================================================================== */
syntax = "proto2";

package tfrt_pb;

// NVinfer datatype.
enum DataType {
    FLOAT = 0;
    HALF = 1;
    INT8 = 2;
}
// NVinfer scaling mode.
enum ScaleMode {
    UNIFORM = 0;
    CHANNEL = 1;
    ELEMENTWISE = 2;
}

message dimsHW {
    optional int32 h = 2 [default = 0];
    optional int32 w = 3 [default = 0];
}
message dimsCHW {
    optional int32 h = 2 [default = 0];
    optional int32 w = 3 [default = 0];
    optional int32 c = 4 [default = 0];
}

message input {
    optional string name = 1 [default = "input"];
    optional int32 h = 2 [default = 224];
    optional int32 w = 3 [default = 224];
    optional int32 c = 4 [default = 3];
    // Scaling mode of the input. Coefficients should be in weights.
    optional ScaleMode scalemode = 5;
}
message output {
    optional string name = 1 [default = "output"];
    optional int32 h = 2 [default = 1];
    optional int32 w = 3 [default = 1];
    optional int32 c = 4 [default = 1];
}

message tensor {
    optional string name = 1;
    // Data + datatype used.
    optional bytes data = 2;
    optional DataType datatype = 3;
    // Tensor shape and size.
    repeated int32 shape = 4;
    optional int32 size = 5;
}

message network {
    optional string name = 1;
    // Network weights and datatype used.
    repeated tensor weights = 2;
    optional DataType datatype = 3;
    // Input and outputs parameters.
    optional input input = 4;
    repeated output outputs = 5;
}
